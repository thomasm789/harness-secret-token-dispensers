template:
  name: AWS STS Temporary Credentials Dispenser
  identifier: AWS_STS_Credentials_Dispenser
  versionLabel: "1"
  type: SecretManager
  tags: {}
  spec:
    shell: Bash
    delegateSelectors: []
    source:
      type: Inline
      spec:
        script: |-
          set -o pipefail

          role_arn="<+secretManager.environmentVariables.role_arn>"
          session_name="<+secretManager.environmentVariables.session_name>"
          session_duration="<+secretManager.environmentVariables.session_duration>"

          echo "Requesting AWS STS Temporary Credentials..."

          response=$(aws sts assume-role \
            --role-arn "$role_arn" \
            --role-session-name "$session_name" \
            --duration-seconds "$session_duration" \
            --output json)

          ACCESS_KEY_ID=$(echo "$response" | grep -o '"AccessKeyId": "[^"]*' | cut -d'"' -f4)
          SECRET_ACCESS_KEY=$(echo "$response" | grep -o '"SecretAccessKey": "[^"]*' | cut -d'"' -f4)
          SESSION_TOKEN=$(echo "$response" | grep -o '"SessionToken": "[^"]*' | cut -d'"' -f4)

          if [[ -z "$ACCESS_KEY_ID" || -z "$SECRET_ACCESS_KEY" || -z "$SESSION_TOKEN" ]]; then
            echo "Failed to retrieve AWS STS temporary credentials"
            echo "Response: $response"
            exit 1
          fi

          echo "AWS STS Temporary Credentials successfully retrieved."

          secret="AWS_ACCESS_KEY_ID=$ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY=$SECRET_ACCESS_KEY AWS_SESSION_TOKEN=$SESSION_TOKEN"
    environmentVariables:
      - name: role_arn
        type: String
        value: <+input>
      - name: session_name
        type: String
        value: <+input>
      - name: session_duration
        type: String
        value: <+input>
    outputVariables: []
    outputAlias:
      key: AWS_TEMP_CREDENTIALS
      scope: Pipeline
    onDelegate: true
